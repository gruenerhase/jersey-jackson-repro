<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>com.connexity.sascha</groupId>
   <artifactId>jersey-jackson-repro</artifactId>
   <version>0.9-SNAPSHOT</version>

   <packaging>jar</packaging>
   <description>Reproduces problems with ignoring unrecognized properties during JSON unmarshalling with Jersey 2</description>

   <properties>
      <!-- JSON parsing test works with jersey 2.25. -->
<!--
      <jersey.version>2.25</jersey.version>
      <jersey.spring.artifactId>jersey-spring3</jersey.spring.artifactId>
-->
      <!-- Upgrading to jersey 2.26 (or newer) will cause test to fail. -->
      <jersey.version>2.26</jersey.version>
      <jersey.spring.artifactId>jersey-spring4</jersey.spring.artifactId>

      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

      <junit.version>4.12</junit.version>
      <jackson.version>2.8.3</jackson.version>

      <!-- Testing Properties -->
      <wiremock.version>2.24.1</wiremock.version>

   </properties>

   <scm>
      <connection>scm:git:git@github.com:gruenerhase/jersey-jackson-repro.git</connection>
      <url>https://github.com/gruenerhase/jersey-jackson-repro</url>
      <developerConnection>scm:git:git@github.com:gruenerhase/jersey-jackson-repro.git
      </developerConnection>
    <tag>HEAD</tag>
  </scm>

   <dependencyManagement>
      <dependencies>

         <!-- Jersey -->
         <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>${jersey.spring.artifactId}</artifactId>
            <version>${jersey.version}</version>
         </dependency>
         <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
         </dependency>
         <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
         </dependency>
         <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
         </dependency>
         <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey.version}</version>
         </dependency>

         <!-- Jackson -->
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
         </dependency>
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
         </dependency>
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
         </dependency>
         <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-csv</artifactId>
            <version>${jackson.version}</version>
         </dependency>
         <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
            <version>${jackson.version}</version>
         </dependency>
         <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jackson.version}</version>
         </dependency>

         <!-- Test -->
         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
         </dependency>

      </dependencies>
   </dependencyManagement>

   <dependencies>
      <!-- Jersey -->
      <dependency>
         <groupId>org.glassfish.jersey.ext</groupId>
         <artifactId>${jersey.spring.artifactId}</artifactId>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.media</groupId>
         <artifactId>jersey-media-json-jackson</artifactId>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.core</groupId>
         <artifactId>jersey-client</artifactId>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.core</groupId>
         <artifactId>jersey-server</artifactId>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.media</groupId>
         <artifactId>jersey-media-multipart</artifactId>
      </dependency>

      <!-- servlet api - required for wiremock -->
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>3.1.0</version>
         <scope>provided</scope>
      </dependency>

      <!-- Jackson -->
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-core</artifactId>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-annotations</artifactId>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.dataformat</groupId>
         <artifactId>jackson-dataformat-csv</artifactId>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.jaxrs</groupId>
         <artifactId>jackson-jaxrs-json-provider</artifactId>
      </dependency>

      <!-- Logging -->
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-log4j12</artifactId>
         <version>1.7.21</version>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <version>1.2</version>
      </dependency>

      <dependency>
         <groupId>javax.xml.bind</groupId>
         <artifactId>jaxb-api</artifactId>
         <version>2.3.1</version>
      </dependency>
      <dependency>
         <groupId>com.sun.xml.bind</groupId>
         <artifactId>jaxb-impl</artifactId>
         <version>2.4.0-b180830.0438</version>
      </dependency>
      <dependency>
         <groupId>com.sun.xml.bind</groupId>
         <artifactId>jaxb-core</artifactId>
         <version>2.3.0.1</version>
      </dependency>

      <!-- Test -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
      </dependency>
      <dependency>
         <groupId>com.github.tomakehurst</groupId>
         <artifactId>wiremock</artifactId>
         <version>${wiremock.version}</version>
         <scope>test</scope>
      </dependency>

   </dependencies>

    <build>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-release-plugin</artifactId>
               <version>2.5.3</version>
               <configuration>
                  <tagNameFormat>@{project.version}</tagNameFormat>
                  <!-- Set to false to allow snapshot dependencies to other libs -->
                  <allowTimestampedSnapshots>false</allowTimestampedSnapshots>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.0.2</version>
            <configuration>
               <source>11</source>
               <target>11</target>
            </configuration>
         </plugin>

      </plugins>

   </build>

</project>
